<?xml version="1.0" encoding="UTF-8"?>
<ui version="4.0">
 <class>MainWindow</class>
 <widget class="QMainWindow" name="MainWindow">
  <property name="windowModality">
   <enum>Qt::NonModal</enum>
  </property>
  <property name="geometry">
   <rect>
    <x>0</x>
    <y>0</y>
    <width>890</width>
    <height>760</height>
   </rect>
  </property>
  <property name="sizePolicy">
   <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
    <horstretch>0</horstretch>
    <verstretch>0</verstretch>
   </sizepolicy>
  </property>
  <property name="minimumSize">
   <size>
    <width>890</width>
    <height>760</height>
   </size>
  </property>
  <property name="maximumSize">
   <size>
    <width>890</width>
    <height>760</height>
   </size>
  </property>
  <property name="font">
   <font>
    <family>Comfortaa</family>
   </font>
  </property>
  <property name="mouseTracking">
   <bool>true</bool>
  </property>
  <property name="focusPolicy">
   <enum>Qt::StrongFocus</enum>
  </property>
  <property name="windowTitle">
   <string>Yandex Music Download</string>
  </property>
  <property name="windowIcon">
   <iconset>
    <normalon>icon.png</normalon>
   </iconset>
  </property>
  <property name="autoFillBackground">
   <bool>false</bool>
  </property>
  <property name="styleSheet">
   <string notr="true">QMainWindow{
	background-color: rgb(50, 50, 50);
}

QScrollBar {
	border: none;
	background: rgba(0, 0, 0, 0);
    width:3px;
    margin: 0px 0px 0px 0px;
}
QScrollBar::handle:vertical {
	background: rgb(175, 175, 175);
	min-height: 0px;
}
QScrollBar::add-page:vertical {
	background: rgba(175, 175, 175, 0);
	height: 0px;
	subcontrol-position: bottom;	
	subcontrol-origin: margin;
}
QScrollBar::sub-page:vertical {
	background: rgba(175, 175, 175, 0);
	height: 0 px;
	subcontrol-position: top;
	subcontrol-origin: margin;
}
QScrollBar::add-line:vertical {
	background: rgba(175, 175, 175, 0);
	height: 0px;
	subcontrol-position: bottom;	
	subcontrol-origin: margin;
}
QScrollBar::sub-line:vertical {
	background: rgba(175, 175, 175, 0);
	height: 0 px;
	subcontrol-position: top;
	subcontrol-origin: margin;
}</string>
  </property>
  <widget class="QWidget" name="Central">
   <property name="enabled">
    <bool>true</bool>
   </property>
   <widget class="QPushButton" name="download">
    <property name="enabled">
     <bool>true</bool>
    </property>
    <property name="geometry">
     <rect>
      <x>525</x>
      <y>710</y>
      <width>110</width>
      <height>40</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <family>Comfortaa</family>
      <pointsize>11</pointsize>
      <bold>true</bold>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">QPushButton { 
	background-color: #ecd105;
	border-radius: 1.5em 20%;
}
QPushButton:hover {
	background-color: #ddc004;
}
QPushButton:pressed {
	 background-color: #c6ac03;
}
QPushButton:!enabled {
	 background-color: #c6b43e;
}</string>
    </property>
    <property name="text">
     <string>Download</string>
    </property>
   </widget>
   <widget class="QPushButton" name="directory">
    <property name="enabled">
     <bool>true</bool>
    </property>
    <property name="geometry">
     <rect>
      <x>755</x>
      <y>710</y>
      <width>110</width>
      <height>40</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <family>Comfortaa</family>
      <pointsize>11</pointsize>
      <bold>true</bold>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">QPushButton { 
	background-color: #ecd105;
	border-radius: 1.5em 20%;
}
QPushButton:hover {
	background-color: #ddc004;
}
QPushButton:pressed {
	 background-color: #c6ac03;
}
QPushButton:!enabled {
	 background-color: #c6b43e;
}</string>
    </property>
    <property name="text">
     <string>Directory</string>
    </property>
   </widget>
   <widget class="QListWidget" name="playlist_songs">
    <property name="geometry">
     <rect>
      <x>515</x>
      <y>65</y>
      <width>360</width>
      <height>640</height>
     </rect>
    </property>
    <property name="sizePolicy">
     <sizepolicy hsizetype="Expanding" vsizetype="Expanding">
      <horstretch>0</horstretch>
      <verstretch>0</verstretch>
     </sizepolicy>
    </property>
    <property name="cursor" stdset="0">
     <cursorShape>PointingHandCursor</cursorShape>
    </property>
    <property name="mouseTracking">
     <bool>false</bool>
    </property>
    <property name="focusPolicy">
     <enum>Qt::StrongFocus</enum>
    </property>
    <property name="contextMenuPolicy">
     <enum>Qt::DefaultContextMenu</enum>
    </property>
    <property name="toolTip">
     <string/>
    </property>
    <property name="toolTipDuration">
     <number>-1</number>
    </property>
    <property name="autoFillBackground">
     <bool>true</bool>
    </property>
    <property name="styleSheet">
     <string notr="true">QListWidget {
	/*background:  qlineargradient(spread:pad, x1:0.495, y1:1, x2:0.511, y2:0, stop:0 rgba(50, 50, 50, 255), stop:0.2 rgba(50, 50, 50, 0));*/
	background: transparent;
	font-size: 20px;
	font-weight: bold;
	font-family: Comfortaa;
	color: white;
	border-bottom-left-radius: 10px;
	border-bottom-right-radius: 10px;
	
}
QListWidget::item:hover {
	background: #484848;
}
QListWidget::item:checked: {
	background: #484848;
}


</string>
    </property>
    <property name="lineWidth">
     <number>2</number>
    </property>
    <property name="midLineWidth">
     <number>2</number>
    </property>
    <property name="verticalScrollBarPolicy">
     <enum>Qt::ScrollBarAsNeeded</enum>
    </property>
    <property name="horizontalScrollBarPolicy">
     <enum>Qt::ScrollBarAlwaysOff</enum>
    </property>
    <property name="sizeAdjustPolicy">
     <enum>QAbstractScrollArea::AdjustIgnored</enum>
    </property>
    <property name="autoScroll">
     <bool>true</bool>
    </property>
    <property name="selectionMode">
     <enum>QAbstractItemView::ExtendedSelection</enum>
    </property>
    <property name="iconSize">
     <size>
      <width>16</width>
      <height>16</height>
     </size>
    </property>
    <property name="textElideMode">
     <enum>Qt::ElideRight</enum>
    </property>
    <property name="resizeMode">
     <enum>QListView::Fixed</enum>
    </property>
    <property name="layoutMode">
     <enum>QListView::SinglePass</enum>
    </property>
    <property name="spacing">
     <number>0</number>
    </property>
    <property name="viewMode">
     <enum>QListView::ListMode</enum>
    </property>
    <property name="modelColumn">
     <number>0</number>
    </property>
    <property name="uniformItemSizes">
     <bool>false</bool>
    </property>
    <property name="batchSize">
     <number>2000</number>
    </property>
    <property name="currentRow">
     <number>-1</number>
    </property>
    <property name="sortingEnabled">
     <bool>false</bool>
    </property>
   </widget>
   <widget class="QComboBox" name="playlist_name">
    <property name="geometry">
     <rect>
      <x>520</x>
      <y>10</y>
      <width>220</width>
      <height>50</height>
     </rect>
    </property>
    <property name="focusPolicy">
     <enum>Qt::ClickFocus</enum>
    </property>
    <property name="layoutDirection">
     <enum>Qt::LeftToRight</enum>
    </property>
    <property name="styleSheet">
     <string notr="true">QComboBox {	
	background-color: rgba(120, 120, 120, 0);
	font-size: 20px;
	font-weight: bold;
	font-family: Comfortaa;
	color: white;	
	padding-top: 3px;
	padding-left: 25px;
	border-top: 0px solid rgb(90, 90, 90);
	border-bottom: 2px solid rgb(90, 90, 90);
}
QComboBox:hover{
	border-bottom: 2px solid rgb(175, 175, 175);
}

QComboBox:focus{
	border-bottom: 2px solid rgb(236, 236, 236);
}
QComboBox::drop-down {
  	subcontrol-origin: padding;
    subcontrol-position: top right;
    width: 15px;
    border-top-right-radius: 3px;
    border-bottom-right-radius: 3px;
}
QComboBox QAbstractItemView {
    background-color: rgb(50, 50, 50);
	border-bottom-left-radius: 10px;
	border-bottom-right-radius: 10px;
	color: white;
}
QComboBox QAbstractItemView::item:hover {
	background: #484848;
}
</string>
    </property>
    <property name="sizeAdjustPolicy">
     <enum>QComboBox::AdjustToContentsOnFirstShow</enum>
    </property>
   </widget>
   <widget class="QPushButton" name="all">
    <property name="enabled">
     <bool>true</bool>
    </property>
    <property name="geometry">
     <rect>
      <x>670</x>
      <y>710</y>
      <width>55</width>
      <height>40</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <family>Comfortaa</family>
      <pointsize>11</pointsize>
      <bold>true</bold>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">QPushButton { 
	background-color: #ecd105;
	border-radius: 1.4em 20%;
	font-weight: bold;
	font-family: Comfortaa;
}
QPushButton:hover {
	background-color: #ddc004;
}
QPushButton:pressed {
	 background-color: #c6ac03;
}
QPushButton:!enabled {
	 background-color: #c6b43e;
}</string>
    </property>
    <property name="text">
     <string>All</string>
    </property>
    <property name="icon">
     <iconset>
      <normaloff>download.png</normaloff>download.png</iconset>
    </property>
    <property name="iconSize">
     <size>
      <width>24</width>
      <height>24</height>
     </size>
    </property>
   </widget>
   <widget class="QLabel" name="amount">
    <property name="geometry">
     <rect>
      <x>745</x>
      <y>10</y>
      <width>120</width>
      <height>50</height>
     </rect>
    </property>
    <property name="focusPolicy">
     <enum>Qt::ClickFocus</enum>
    </property>
    <property name="styleSheet">
     <string notr="true">QLabel {	
	background-color: rgba(120, 120, 120, 0);
	font-size: 20px;
	font-weight: bold;
	font-family: Comfortaa;
	color: white;	
	padding-top: 3px;
	border-bottom: 2px solid rgb(90, 90, 90);
}
</string>
    </property>
    <property name="text">
     <string/>
    </property>
    <property name="alignment">
     <set>Qt::AlignCenter</set>
    </property>
   </widget>
   <widget class="QPushButton" name="play">
    <property name="enabled">
     <bool>true</bool>
    </property>
    <property name="geometry">
     <rect>
      <x>225</x>
      <y>645</y>
      <width>60</width>
      <height>60</height>
     </rect>
    </property>
    <property name="styleSheet">
     <string notr="true">QPushButton { 
	background-color: rgba(0, 0, 0, 0);
	border-radius: 30%;
}
QPushButton:hover {
	background-color: rgba(189, 189, 189, 25);
}
QPushButton:pressed {
	 background-color: rgba(127, 127, 127, 25);
}
</string>
    </property>
    <property name="icon">
     <iconset>
      <normaloff>play.png</normaloff>play.png</iconset>
    </property>
    <property name="iconSize">
     <size>
      <width>48</width>
      <height>48</height>
     </size>
    </property>
   </widget>
   <widget class="QPushButton" name="back">
    <property name="geometry">
     <rect>
      <x>140</x>
      <y>652</y>
      <width>45</width>
      <height>45</height>
     </rect>
    </property>
    <property name="styleSheet">
     <string notr="true">QPushButton { 
	background-color: rgba(0, 0, 0, 0);
	border-radius: 22%;
}
QPushButton:hover {
	background-color: rgba(189, 189, 189, 25);
}
QPushButton:pressed {
	 background-color: rgba(127, 127, 127, 25);
}
</string>
    </property>
    <property name="icon">
     <iconset>
      <normaloff>back.png</normaloff>back.png</iconset>
    </property>
    <property name="iconSize">
     <size>
      <width>32</width>
      <height>32</height>
     </size>
    </property>
   </widget>
   <widget class="QPushButton" name="next">
    <property name="geometry">
     <rect>
      <x>325</x>
      <y>652</y>
      <width>45</width>
      <height>45</height>
     </rect>
    </property>
    <property name="styleSheet">
     <string notr="true">QPushButton { 
	background-color: rgba(0, 0, 0, 0);
	border-radius: 22%;
}
QPushButton:hover {
	background-color: rgba(189, 189, 189, 25);
}
QPushButton:pressed {
	 background-color: rgba(127, 127, 127, 25);
}
</string>
    </property>
    <property name="icon">
     <iconset>
      <normaloff>next.png</normaloff>next.png</iconset>
    </property>
    <property name="iconSize">
     <size>
      <width>32</width>
      <height>32</height>
     </size>
    </property>
   </widget>
   <widget class="QLabel" name="active_song_name">
    <property name="geometry">
     <rect>
      <x>55</x>
      <y>535</y>
      <width>400</width>
      <height>50</height>
     </rect>
    </property>
    <property name="focusPolicy">
     <enum>Qt::ClickFocus</enum>
    </property>
    <property name="styleSheet">
     <string notr="true">QLabel {	
	background-color: rgba(50, 50, 50, 0);
	border-radius: 10px;
	font-size: 20px;
	font-weight: bold;
	font-family: Comfortaa;
	color: white;	
}
</string>
    </property>
    <property name="alignment">
     <set>Qt::AlignCenter</set>
    </property>
   </widget>
   <widget class="QProgressBar" name="musicBar">
    <property name="geometry">
     <rect>
      <x>58</x>
      <y>612</y>
      <width>397</width>
      <height>10</height>
     </rect>
    </property>
    <property name="styleSheet">
     <string notr="true">QProgressBar {	
	background-color: rgb(120, 120, 120);
	border-radius: 1px;
}

QProgressBar::chunk {
	background-color: white;
	border-radius: 1px;
}
</string>
    </property>
    <property name="maximum">
     <number>100</number>
    </property>
    <property name="value">
     <number>0</number>
    </property>
    <property name="textVisible">
     <bool>false</bool>
    </property>
    <property name="orientation">
     <enum>Qt::Horizontal</enum>
    </property>
   </widget>
   <widget class="QSlider" name="volumeSlider">
    <property name="geometry">
     <rect>
      <x>175</x>
      <y>725</y>
      <width>160</width>
      <height>20</height>
     </rect>
    </property>
    <property name="styleSheet">
     <string notr="true">QSlider{
	background-color:rgba(120, 120, 120, 0);
	}
QSlider::groove:horizontal {
    height: 5px; 
    background-color:rgba(120, 120, 120, 0);
    margin: 2px 0;
}

QSlider::handle:horizontal {
	background-color:rgb(60, 60, 60);
    border: 2px solid white;
    width: 10px;
    margin: -5px 0;
	border-radius: 7.4px;
}

QSlider::handle:horizontal:hover {
	background-color:  #ccae04;
}

QSlider::handle:horizontal:pressed {
	background-color: #ecd105;
}

</string>
    </property>
    <property name="maximum">
     <number>100</number>
    </property>
    <property name="pageStep">
     <number>1</number>
    </property>
    <property name="value">
     <number>100</number>
    </property>
    <property name="sliderPosition">
     <number>100</number>
    </property>
    <property name="tracking">
     <bool>true</bool>
    </property>
    <property name="orientation">
     <enum>Qt::Horizontal</enum>
    </property>
   </widget>
   <widget class="QProgressBar" name="volumeBar">
    <property name="geometry">
     <rect>
      <x>175</x>
      <y>733</y>
      <width>160</width>
      <height>5</height>
     </rect>
    </property>
    <property name="styleSheet">
     <string notr="true">QProgressBar {	
	background-color: rgb(120, 120, 120);
	border-radius: 5px;
}

QProgressBar::chunk {
	background-color: white;
}


</string>
    </property>
    <property name="value">
     <number>100</number>
    </property>
    <property name="textVisible">
     <bool>false</bool>
    </property>
   </widget>
   <widget class="QLabel" name="image">
    <property name="geometry">
     <rect>
      <x>30</x>
      <y>65</y>
      <width>450</width>
      <height>450</height>
     </rect>
    </property>
    <property name="focusPolicy">
     <enum>Qt::ClickFocus</enum>
    </property>
    <property name="styleSheet">
     <string notr="true">QLabel {	
	background-color: rgb(120, 120, 120);
	border-radius: 10px;
	font-size: 20px;
	font-weight: bold;
	font-family: Comfortaa;
	color: white;	
}</string>
    </property>
    <property name="text">
     <string/>
    </property>
    <property name="scaledContents">
     <bool>true</bool>
    </property>
   </widget>
   <widget class="QSlider" name="musicSlider">
    <property name="geometry">
     <rect>
      <x>55</x>
      <y>602</y>
      <width>400</width>
      <height>30</height>
     </rect>
    </property>
    <property name="mouseTracking">
     <bool>true</bool>
    </property>
    <property name="focusPolicy">
     <enum>Qt::StrongFocus</enum>
    </property>
    <property name="styleSheet">
     <string notr="true">QSlider{
	background-color:rgba(120, 120, 120, 0);
	}
QSlider::groove:horizontal {
    height: 15px; 
    background-color:rgba(120, 120, 120, 0);
    margin: 2px 0;
}

QSlider::handle:horizontal {
	background-color:rgb(60, 60, 60);
    border: 2px solid white;
    width: 10px;
	margin: 0px 0;
	border-radius: 7px;
}

QSlider::handle:horizontal:hover {
	background-color:  #ccae04;
}

QSlider::handle:horizontal:pressed {
	background-color: #ecd105;
}

</string>
    </property>
    <property name="maximum">
     <number>100</number>
    </property>
    <property name="pageStep">
     <number>0</number>
    </property>
    <property name="value">
     <number>0</number>
    </property>
    <property name="tracking">
     <bool>true</bool>
    </property>
    <property name="orientation">
     <enum>Qt::Horizontal</enum>
    </property>
   </widget>
   <widget class="QLineEdit" name="search">
    <property name="geometry">
     <rect>
      <x>35</x>
      <y>10</y>
      <width>440</width>
      <height>50</height>
     </rect>
    </property>
    <property name="styleSheet">
     <string notr="true">QLineEdit {	
	background-color: rgba(120, 120, 120, 0);
	font-size: 20px;
	font-weight: bold;
	font-family: Comfortaa;
	color: white;	
	padding-left: 20px;
	padding-right: 20px;
	border-top: 0px solid rgb(90, 90, 90);
	border-bottom: 2px solid rgb(90, 90, 90);
	
}
QLineEdit:hover{
	border-bottom: 2px solid rgb(175, 175, 175);
}

QLineEdit:focus{
	border-bottom: 2px solid rgb(236, 236, 236);
}</string>
    </property>
    <property name="text">
     <string/>
    </property>
    <property name="placeholderText">
     <string>Поиск</string>
    </property>
    <property name="clearButtonEnabled">
     <bool>true</bool>
    </property>
   </widget>
   <widget class="QLabel" name="total_len">
    <property name="geometry">
     <rect>
      <x>0</x>
      <y>608</y>
      <width>50</width>
      <height>20</height>
     </rect>
    </property>
    <property name="focusPolicy">
     <enum>Qt::ClickFocus</enum>
    </property>
    <property name="layoutDirection">
     <enum>Qt::LeftToRight</enum>
    </property>
    <property name="styleSheet">
     <string notr="true">QLabel{
	font-size: 14px;
	font-weight: bold;
	font-family: Comfortaa;
	color: white;	
}</string>
    </property>
    <property name="text">
     <string>00:00</string>
    </property>
    <property name="alignment">
     <set>Qt::AlignRight|Qt::AlignTrailing|Qt::AlignVCenter</set>
    </property>
   </widget>
   <widget class="QLabel" name="track_len">
    <property name="geometry">
     <rect>
      <x>460</x>
      <y>607</y>
      <width>50</width>
      <height>20</height>
     </rect>
    </property>
    <property name="focusPolicy">
     <enum>Qt::ClickFocus</enum>
    </property>
    <property name="styleSheet">
     <string notr="true">QLabel{
	font-size: 14px;
	font-weight: bold;
	font-family: Comfortaa;
	color: white;	
}</string>
    </property>
    <property name="text">
     <string>00:00</string>
    </property>
   </widget>
   <widget class="QListWidget" name="search_result_list">
    <property name="enabled">
     <bool>false</bool>
    </property>
    <property name="geometry">
     <rect>
      <x>30</x>
      <y>62</y>
      <width>450</width>
      <height>462</height>
     </rect>
    </property>
    <property name="styleSheet">
     <string notr="true">QListWidget {
	/*background:  qlineargradient(spread:pad, x1:0.495, y1:1, x2:0.511, y2:0, stop:0 rgba(50, 50, 50, 255), stop:0.2 rgba(50, 50, 50, 0));*/
	font-size: 20px;
	background-color: rgb(50, 50, 50);
	font-weight: bold;
	font-family: Comfortaa;
	color: white;
	border-bottom-left-radius: 10px;
	border-bottom-right-radius: 10px;	
}

QListWidget:!enabled{
	background-color: rgba(255, 255, 255, 0);
}

QListWidget::item:hover {
	background: #484848;
}
QListWidget::item:checked: {
	background: #484848;
}
</string>
    </property>
    <property name="horizontalScrollBarPolicy">
     <enum>Qt::ScrollBarAlwaysOff</enum>
    </property>
   </widget>
   <zorder>musicBar</zorder>
   <zorder>musicSlider</zorder>
   <zorder>playlist_songs</zorder>
   <zorder>volumeBar</zorder>
   <zorder>directory</zorder>
   <zorder>download</zorder>
   <zorder>playlist_name</zorder>
   <zorder>all</zorder>
   <zorder>amount</zorder>
   <zorder>play</zorder>
   <zorder>back</zorder>
   <zorder>next</zorder>
   <zorder>active_song_name</zorder>
   <zorder>image</zorder>
   <zorder>volumeSlider</zorder>
   <zorder>search</zorder>
   <zorder>total_len</zorder>
   <zorder>track_len</zorder>
   <zorder>search_result_list</zorder>
  </widget>
 </widget>
 <resources>
  <include location="../resources.qrc"/>
 </resources>
 <connections>
  <connection>
   <sender>volumeSlider</sender>
   <signal>valueChanged(int)</signal>
   <receiver>volumeBar</receiver>
   <slot>setValue(int)</slot>
   <hints>
    <hint type="sourcelabel">
     <x>211</x>
     <y>735</y>
    </hint>
    <hint type="destinationlabel">
     <x>288</x>
     <y>737</y>
    </hint>
   </hints>
  </connection>
  <connection>
   <sender>musicSlider</sender>
   <signal>valueChanged(int)</signal>
   <receiver>musicBar</receiver>
   <slot>setValue(int)</slot>
   <hints>
    <hint type="sourcelabel">
     <x>200</x>
     <y>610</y>
    </hint>
    <hint type="destinationlabel">
     <x>279</x>
     <y>612</y>
    </hint>
   </hints>
  </connection>
 </connections>
</ui>
